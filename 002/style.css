/* // delete the following line if no text is used */
/* // edit the line if you wanna use other fonts */
@import url(https://fonts.googleapis.com/css?family=Open+Sans:700,300);

/* // use only the available space inside the 400x400 frame */
.frame {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    height: 400px;
    margin-top: -200px;
    margin-left: -200px;
    border-radius: 2px;
    box-shadow: 4px 8px 16px 0 rgba(0, 0, 0, 0.1);
    overflow: hidden;
    background: #fff;
    color: #333;
    font-family: 'Open Sans', Helvetica, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background-color: #56B082;
}

.center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.icon {
    width: 5rem;
    height: 3.25rem;
}


.stick {
    width: 100%;
    height: 0.5rem;
    background-color: white;
    border-radius: 0.5rem;
    box-shadow: 0 0 1rem 0 #0000005e;
}

.st1 {
    /* //not using forward here cuz the default state is aleready our base state */
    animation: ani-st1 0.7s ease-in-out;
}

.st2 {
    margin: 1rem 0;
    animation: ani-st2 0.7s ease-in-out;

}

.st3 {
    animation: ani-st3 0.7s ease-in-out;

}


/* //read into these kind of selectors where you combine two classes together, maybe it means the clicked class of icon */

.icon.clicked .st1 {
    /* //using forward here so that it stays in the animated state */
    animation: ani-st1-clicked 0.7s ease-in-out forwards;
}

.icon.clicked .st2 {
    animation: ani-st2-clicked 0.7s ease-in-out forwards;
}

.icon.clicked .st3 {
    animation: ani-st3-clicked 0.7s ease-in-out forwards;
}

/* //animation for clicked states */

@keyframes ani-st1-clicked {
    0% {
        transform: translateY(0) rotate(0deg);
    }

    50% {
        transform: translateY(2rem) rotate(0deg);
    }

    100% {
        transform: translateY(2rem) rotate(45deg);
    }
}

@keyframes ani-st2-clicked {
    0% {
        opacity: 1;
        transform: scale(1);
    }

    100% {
        opacity: 0;
        transform: scale(0);
    }
}

@keyframes ani-st3-clicked {
    0% {
        transform: translateY(0) rotate(0deg);
    }

    50% {
        transform: translateY(-1rem) rotate(0deg);
    }

    100% {
        transform: translateY(-1rem) rotate(135deg);
    }
}


/* //animation for unclicked states, we will just reverse the whole process */


@keyframes ani-st1 {
    0% {
        transform: translateY(2rem) rotate(45deg);

    }

    50% {
        transform: translateY(2rem) rotate(0deg);
    }

    100% {
        transform: translateY(0) rotate(0deg);
    }
}

@keyframes ani-st2 {
    0% {
        opacity: 0;
        transform: scale(0);
    }

    100% {

        opacity: 1;
        transform: scale(1);
    }
}

@keyframes ani-st3 {
    0% {
        transform: translateY(-1rem) rotate(135deg);

    }

    50% {
        transform: translateY(-1rem) rotate(0deg);
    }

    100% {
        transform: translateY(0) rotate(0deg);
    }
}